attribute vec3 vertexPosition;
attribute vec3 vertexNormal;
attribute vec3 vertexTangent;
attribute vec3 vertexBitangent;
attribute vec2 vertexTexCoord;

uniform mat4 worldMatrix;
uniform mat4 viewProjMatrix;

varying vec3 fragmentWorldSpacePosition;
varying vec3 fragmentNormal;
varying vec3 fragmentTangent;
varying vec3 fragmentBitangent;
varying vec2 texCoord;

void main(void) 
{
	vec4 tempWorldSpacePosition = worldMatrix * vec4(vertexPosition, 1.0);

	fragmentWorldSpacePosition = tempWorldSpacePosition.xyz;

	mat3 rotationMatrix = mat3(worldMatrix);
	fragmentNormal = rotationMatrix * vertexNormal;
	fragmentTangent = rotationMatrix * vertexTangent;
	fragmentBitangent = rotationMatrix * vertexBitangent;

	texCoord = vertexTexCoord;

    gl_Position = viewProjMatrix * tempWorldSpacePosition;
}